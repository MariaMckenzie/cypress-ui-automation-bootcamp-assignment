{
  "stats": {
    "suites": 1,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2022-12-07T01:30:08.165Z",
    "end": "2022-12-07T01:30:21.332Z",
    "duration": 13167,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d50eac50-85fa-47cf-ae1c-404b38892a22",
      "title": "",
      "fullFile": "cypress\\e2e\\tests\\DataDrivenLogin\\login.cy.js",
      "file": "cypress\\e2e\\tests\\DataDrivenLogin\\login.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "53ef8ecd-ebeb-43af-9850-d8d174b985d5",
          "title": "Data Driven Login",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Assert that the login page can facilitate login",
              "fullTitle": "Data Driven Login Assert that the login page can facilitate login",
              "timedOut": null,
              "duration": 401,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// assert that the user is on the correct page\ncy.url().should(\"eq\", \"https://www.saucedemo.com/\"); // assert that the input fields for login is visible\ncy.get(_login.default.usernameInput).should(\"be.visible\");\ncy.get(_login.default.passwordInput).should(\"be.visible\");\ncy.get(_login.default.loginButton).should(\"be.visible\");",
              "err": {},
              "uuid": "70a1561c-a8cb-49f0-a3df-1b624100d1a4",
              "parentUUID": "53ef8ecd-ebeb-43af-9850-d8d174b985d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Log in as a standard user (with valid credentials)",
              "fullTitle": "Data Driven Login Log in as a standard user (with valid credentials)",
              "timedOut": null,
              "duration": 1603,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// login with a valid user\n_login.default.login(_login2.standardUser.username, _login2.standardUser.password); // assert that the user logs in successfully and can see the inventory page, inventory items and cart button\n\ncy.url().should(\"eq\", \"https://www.saucedemo.com/inventory.html\");\ncy.get(_inventory.default.getItemInformation(_products.item1.no)).should(\"be.visible\"); //first item\ncy.get(_inventory.default.getItemName(_products.item1.no)).should(\"have.text\", _products.item1.name);\ncy.get(_inventory.default.cartButton).should(\"be.visible\"); // log out user\n_inventory.default.logout(); // assert that the user is logged out\n\ncy.url().should(\"eq\", \"https://www.saucedemo.com/\");",
              "err": {},
              "uuid": "d551d00c-0bb7-4ec1-b6d0-8cbc6e1e5fd1",
              "parentUUID": "53ef8ecd-ebeb-43af-9850-d8d174b985d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Log in as a locked out user",
              "fullTitle": "Data Driven Login Log in as a locked out user",
              "timedOut": null,
              "duration": 1054,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// attempt to log in\n_login.default.login(_login2.lockedOutUser.username, _login2.lockedOutUser.password);\ncy.get(_login.default.loginError).should(\"be.visible\");\ncy.get(_login.default.loginError).should(\"contain\", _login2.lockedOutUser.errorMsg); // assert that the user did not log in\ncy.url().should(\"not.eq\", \"https://www.saucedemo.com/inventory.html\");\ncy.get(_inventory.default.inventoryList).should(\"not.exist\");\ncy.get(_inventory.default.cartButton).should(\"not.exist\");",
              "err": {},
              "uuid": "8f5b4e78-eeaa-4dd1-a374-58f127930745",
              "parentUUID": "53ef8ecd-ebeb-43af-9850-d8d174b985d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Log in as a performance glitch user",
              "fullTitle": "Data Driven Login Log in as a performance glitch user",
              "timedOut": null,
              "duration": 6787,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// login with as a performance glitch user\n_login.default.login(_login2.performanceGlitchUser.username, _login2.performanceGlitchUser.password); // assert that the user logs in successfully and can see the inventory page, inventory items and cart button after a certain time\n\ncy.url().should(\"eq\", \"https://www.saucedemo.com/inventory.html\");\n/**\n * According to the saucedemo.com source code [view in Dev Tools > Sources > static > js > pages > inventory.jsx (lines 25-28)],\n * for a performance glitch user the page should be visible after 5 seconds. The code snippet is as follows:\n *      // istanbul ignore next\n        if (isPerformanceGlitchUser()) {\n             startPerformanceGlitch(5000);\n        }\n */\ncy.get(_inventory.default.inventoryList, {\n  timeout: 5000\n}).should('be.visible');\ncy.get(_inventory.default.getItemInformation(_products.item1.no)).should(\"be.visible\"); //first item\ncy.get(_inventory.default.getItemName(_products.item1.no)).should(\"have.text\", _products.item1.name);\ncy.get(_inventory.default.cartButton).should(\"be.visible\"); // log out user\n_inventory.default.logout(); // assert that the user is logged out\n\ncy.url().should(\"eq\", \"https://www.saucedemo.com/\");",
              "err": {},
              "uuid": "31156775-2216-45d6-b05d-ebe254e0c4c5",
              "parentUUID": "53ef8ecd-ebeb-43af-9850-d8d174b985d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Log in as a problem user",
              "fullTitle": "Data Driven Login Log in as a problem user",
              "timedOut": null,
              "duration": 1504,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// login as a problem user\n_login.default.login(_login2.problemUser.username, _login2.problemUser.password); // assert that the user logs in successfully and can see the inventory page, inventory items and cart button\n\ncy.url().should(\"eq\", \"https://www.saucedemo.com/inventory.html\");\n/**\n * According to the saucedemo.com source code [view in Dev Tools > Sources > static > js > pages > inventory.jsx], \n * nothing happens once a problem user logs in\n */\ncy.get(_inventory.default.getItemInformation(_products.item1.no)).should(\"be.visible\"); //first item\ncy.get(_inventory.default.getItemName(_products.item1.no)).should(\"have.text\", _products.item1.name);\ncy.get(_inventory.default.cartButton).should(\"be.visible\"); // log out user\n_inventory.default.logout(); // assert that the user is logged out\n\ncy.url().should(\"eq\", \"https://www.saucedemo.com/\");",
              "err": {},
              "uuid": "54e93564-61cb-4e93-929b-9314454f2d5a",
              "parentUUID": "53ef8ecd-ebeb-43af-9850-d8d174b985d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cannot log in when all form fields are empty",
              "fullTitle": "Data Driven Login Cannot log in when all form fields are empty",
              "timedOut": null,
              "duration": 418,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// attempt to log in\n_login.default.login(_login2.missingData.username, _login2.missingData.password);\ncy.get(_login.default.loginError).should(\"be.visible\");\ncy.get(_login.default.loginError).should(\"contain\", _login2.missingData.errorMsg); // assert that the user did not log in\ncy.url().should(\"not.eq\", \"https://www.saucedemo.com/inventory.html\");\ncy.get(_inventory.default.inventoryList).should(\"not.exist\");\ncy.get(_inventory.default.cartButton).should(\"not.exist\");",
              "err": {},
              "uuid": "15ad497d-aace-46f3-9457-3daabfb5a8ad",
              "parentUUID": "53ef8ecd-ebeb-43af-9850-d8d174b985d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cannot log in when username input field is empty",
              "fullTitle": "Data Driven Login Cannot log in when username input field is empty",
              "timedOut": null,
              "duration": 658,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// attempt to log in with missing username\n_login.default.login(_login2.missingUsername.username, _login2.missingUsername.password);\ncy.get(_login.default.loginError).should(\"be.visible\");\ncy.get(_login.default.loginError).should(\"contain\", _login2.missingUsername.errorMsg); // assert that the user did not log in\ncy.url().should(\"not.eq\", \"https://www.saucedemo.com/inventory.html\");\ncy.get(_inventory.default.inventoryList).should(\"not.exist\");\ncy.get(_inventory.default.cartButton).should(\"not.exist\");",
              "err": {},
              "uuid": "f73e7adb-e50f-438c-a7a8-5f5593755675",
              "parentUUID": "53ef8ecd-ebeb-43af-9850-d8d174b985d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cannot log in when password input field is empty",
              "fullTitle": "Data Driven Login Cannot log in when password input field is empty",
              "timedOut": null,
              "duration": 631,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// attempt to log in with missing password\n_login.default.login(_login2.missingPassword.username, _login2.missingPassword.password);\ncy.get(_login.default.loginError).should(\"be.visible\");\ncy.get(_login.default.loginError).should(\"contain\", _login2.missingPassword.errorMsg); // assert that the user did not log in\ncy.url().should(\"not.eq\", \"https://www.saucedemo.com/inventory.html\");\ncy.get(_inventory.default.inventoryList).should(\"not.exist\");\ncy.get(_inventory.default.cartButton).should(\"not.exist\");",
              "err": {},
              "uuid": "7b7da4d0-967a-442f-99a6-cd6dd02badda",
              "parentUUID": "53ef8ecd-ebeb-43af-9850-d8d174b985d5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "70a1561c-a8cb-49f0-a3df-1b624100d1a4",
            "d551d00c-0bb7-4ec1-b6d0-8cbc6e1e5fd1",
            "8f5b4e78-eeaa-4dd1-a374-58f127930745",
            "31156775-2216-45d6-b05d-ebe254e0c4c5",
            "54e93564-61cb-4e93-929b-9314454f2d5a",
            "15ad497d-aace-46f3-9457-3daabfb5a8ad",
            "f73e7adb-e50f-438c-a7a8-5f5593755675",
            "7b7da4d0-967a-442f-99a6-cd6dd02badda"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13056,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}