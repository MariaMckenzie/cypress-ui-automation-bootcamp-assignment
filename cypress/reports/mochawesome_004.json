{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2022-12-07T01:30:38.561Z",
    "end": "2022-12-07T01:30:45.521Z",
    "duration": 6960,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e0b1e79f-ec3a-4600-becf-3de05a38fa11",
      "title": "",
      "fullFile": "cypress\\e2e\\tests\\Sort\\sort2.cy.js",
      "file": "cypress\\e2e\\tests\\Sort\\sort2.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "29df9670-53cc-4fc6-8700-b6d125d3be69",
          "title": "Sort as a problem user",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should keep default sort by name in ascending order",
              "fullTitle": "Sort as a problem user Should keep default sort by name in ascending order",
              "timedOut": null,
              "duration": 1281,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// sort by name in ascending order\ncy.get(_inventory.default.sortSelection).select(0);\nitemsLst.sort(function (a, b) {\n  return a[0].localeCompare(b[0]);\n}); // sort items list\n// assert that the items are not sorted - default sorting remains\ncy.get(_inventory.default.getItemName(1)).should(\"have.text\", itemsLst[0][0]);\ncy.get(_inventory.default.getItemName(3)).should(\"have.text\", itemsLst[2][0]);\ncy.get(_inventory.default.getItemName(6)).should(\"have.text\", itemsLst[5][0]);",
              "err": {},
              "uuid": "4a379117-e4a9-4b3b-b5ef-f7e63d48f650",
              "parentUUID": "29df9670-53cc-4fc6-8700-b6d125d3be69",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not sort by name in descending order",
              "fullTitle": "Sort as a problem user Should not sort by name in descending order",
              "timedOut": null,
              "duration": 1221,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// sort by name in descending order\n_inventory.default.zaSort();\nitemsLst.sort(function (a, b) {\n  return b[0].localeCompare(a[0]);\n}); // sort items list\n// assert that the items are not sorted\ncy.get(_inventory.default.getItemName(1)).should(\"not.have.text\", itemsLst[0][0]);\ncy.get(_inventory.default.getItemName(3)).should(\"not.have.text\", itemsLst[2][0]);\ncy.get(_inventory.default.getItemName(6)).should(\"not.have.text\", itemsLst[5][0]);",
              "err": {},
              "uuid": "fca3b685-38b4-46eb-9035-35a416ecc09d",
              "parentUUID": "29df9670-53cc-4fc6-8700-b6d125d3be69",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not sort by price in ascending order",
              "fullTitle": "Sort as a problem user Should not sort by price in ascending order",
              "timedOut": null,
              "duration": 1100,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// sort by price in ascending order\n_inventory.default.lohiSort();\nitemsLst.sort(function (a, b) {\n  if (a[1] === b[1]) {\n    return a[0].localeCompare(b[0]);\n  }\n  return a[1] - b[1];\n}); // sort items list\n// assert that the items are not sorted\ncy.get(_inventory.default.getItemName(1)).should(\"not.have.text\", itemsLst[0][0]);\ncy.get(_inventory.default.getItemName(4)).should(\"not.have.text\", itemsLst[3][0]);\ncy.get(_inventory.default.getItemName(6)).should(\"not.have.text\", itemsLst[5][0]);",
              "err": {},
              "uuid": "77580e95-27b3-47c1-bf7f-ba8d64c62274",
              "parentUUID": "29df9670-53cc-4fc6-8700-b6d125d3be69",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not sort by price in descending order",
              "fullTitle": "Sort as a problem user Should not sort by price in descending order",
              "timedOut": null,
              "duration": 1163,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// sort by price in descending order\n_inventory.default.hiloSort();\nitemsLst.sort(function (a, b) {\n  if (a[1] === b[1]) {\n    return a[0].localeCompare(b[0]);\n  }\n  return b[1] - a[1];\n}); // sort items list\n// assert that the items are not sorted\ncy.get(_inventory.default.getItemName(1)).should(\"not.have.text\", itemsLst[0][0]);\ncy.get(_inventory.default.getItemName(4)).should(\"not.have.text\", itemsLst[3][0]);\ncy.get(_inventory.default.getItemName(6)).should(\"not.have.text\", itemsLst[5][0]);",
              "err": {},
              "uuid": "4e7d2d89-5559-4126-b6c9-361624334939",
              "parentUUID": "29df9670-53cc-4fc6-8700-b6d125d3be69",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4a379117-e4a9-4b3b-b5ef-f7e63d48f650",
            "fca3b685-38b4-46eb-9035-35a416ecc09d",
            "77580e95-27b3-47c1-bf7f-ba8d64c62274",
            "4e7d2d89-5559-4126-b6c9-361624334939"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4765,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}